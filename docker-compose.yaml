version: '3.4'

services:

    #transmission-openvpn:
        #volumes:
            #- /home/$USER/docker/containers/ovpn:/data
            #- '/etc/localtime:/etc/localtime:ro'
        #environment:
            #- CREATE_TUN_DEVICE=true
            #- OPENVPN_PROVIDER=PIA
            #- OPENVPN_CONFIG=US Toronto
            #- OPENVPN_USERNAME=$USER
            #- OPENVPN_PASSWORD=$ovpnpasswd
            #- WEBPROXY_ENABLED=false
            #- LOCAL_NETWORK=192.168.0.0/16
        #cap_add:
            #- NET_ADMIN
        #logging:
            #driver: json-file
            #options:
                #max-size: 10m
        #ports:
            #- '9091:9091'
        #image: haugene/transmission-openvpn

  homeassistant:
    container_name: ha
    image: homeassistant/home-assistant:latest
    env_file: ./.env
    volumes:
      - /home/$USER/docker/containers/ha:/config
      - /etc/localtime:/etc/localtime:ro
    restart: on-failure
    network_mode: host
    environment:
      - UDEV=1
    privileged: true
    devices:
      - /dev/ttyACM0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:$ha_port1"]
      interval: 30s
      timeout: 10s
      retries: 6
    depends_on:
      - influxdb
      - mqtt

  adb:
    container_name: adb
    restart: on-failure
    image: sorccu/adb
    env_file: ./.env
    command: sh -c "/config/startup.sh & /config/adb_start"
    volumes:
      - /home/$USER/docker/containers/adb:/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${adb_port1}:${adb_port2}"

  watchtower:
    container_name: watchtower
    restart: on-failure
    image: containrrr/watchtower
    env_file: ./.env
    environment:
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${email}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${email}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${email_server}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${email_user}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${email_pw}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --debug true --cleanup true ha hasync mqtt grafana influxdb tasmoadmin dockermon letsencrypt-nginx nodered esphome

  syncthing:
    container_name: hasync
    restart: on-failure
    image: linuxserver/syncthing
    env_file: ./.env
    volumes:
      - /home/$USER/docker/containers/syncthing:/config
      - /home/$USER/docker/containers/ha:/sync
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    environment:
      - PGID=${PGID}
      - PUID=${PUID}

  mqtt:
    container_name: mqtt
    restart: on-failure
    image: eclipse-mosquitto:latest
    env_file: ./.env
    user: 1883:1883
    environment:
      - PGID=1883
      - PUID=1883
    volumes:
      - /home/$USER/docker/containers/mosquitto/config:/mosquitto/config:rw
      - /home/$USER/docker/containers/mosquitto/data:/mosquitto/data:rw
      - /home/$USER/docker/containers/mosquitto/log:/mosquitto/log:rw
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${mqtt_port1}:${mqtt_port1}"
      - "${mqtt_port2}:${mqtt_port2}"

  grafana:
    container_name: grafana
    restart: on-failure
    image: grafana/grafana:latest
    env_file: ./.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/$USER/docker/containers/grafana:/var/lib/grafana
    user: ${PUID}
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "${grafana_port1}:${grafana_port2}"

  influxdb:
    container_name: influxdb
    restart: on-failure
    image: influxdb:latest
    env_file: ./.env
    volumes:
      - influxdb_data:/var/lib/influxdb
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${influxdb_port1}:${influxdb_port2}"

  tasmoadmin:
    container_name: tasmoadmin
    restart: on-failure
    image: raymondmm/tasmoadmin
    env_file: ./.env
    volumes:
      - tasmoadmin_data:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${tasmoadmin_port1}:${tasmoadmin_port2}"

  netdata:
    container_name: netdata
    image: netdata/netdata
    env_file: ./.env
    restart: on-failure
    ports:
      - "${netdata_port1}:${netdata_port2}"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment: 
      - PGID=${netdata_PGID}

  dockermon:
    container_name: dockermon
    restart: on-failure
    image: philhawthorne/ha-dockermon
    env_file: ./.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/$USER/docker/containers/dockermon:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${dockermon_port1}:${dockermon_port2}"

  letsencrypt-nginx:
    container_name: letsencrypt-nginx
    image: linuxserver/letsencrypt
    env_file: ./.env
    restart: on-failure
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/$USER/docker/containers/letsencrypt-nginx:/config
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - EMAIL=${email}
      - URL=${ha_url}
      - SUBDOMAINS=${subdomains}
        #- EXTRA_DOMAINS=${extra_domains}
      - VALIDATION=http
      - TZ=${timezone}
    ports:
      - "80:80"
      - "443:443"

  node-red:
    container_name: nodered
    image: nodered/node-red-docker
    env_file: ./.env
    restart: on-failure
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/$USER/docker/containers/node-red:/data
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
    ports:
      - "${node_red_port1}:${node_red_port2}"

  octoprint:
    image: octoprint/octoprint
    ports:
      - "${octoprint_port1}:${octoprint_port2}"
    # devices:
    #  - /dev/ttyACM0:/dev/ttyACM0
    volumes:
     - /home/$USER/docker/containers/octoprint:/home/octoprint
      
volumes:
  influxdb_data:
  tasmoadmin_data:
